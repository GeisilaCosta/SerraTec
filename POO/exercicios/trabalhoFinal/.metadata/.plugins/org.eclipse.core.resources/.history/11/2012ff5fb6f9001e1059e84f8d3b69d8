package trabalhoFinal;

import java.util.List;
import java.io.*;
import utilitarios.utils;

public class ContaCorrente extends Conta {
	
private static int contadorDeContasC = 1; //contar as contas criadas
private int numeroConta;
private double taxaSaque = 0.10;
private double taxaDeposito = 0.10;
private double taxaTransferencia = 0.20;
public ContaCorrente(Cliente cliente, int identificadorAgencia, TipoContaEnun tipoConta, double saldo,
		List<String> historico, int numeroConta, double taxaSaque, double taxaDeposito, double taxaTransferencia) {
	super(cliente, identificadorAgencia, tipoConta, saldo, historico);
	this.numeroConta = numeroConta;
	this.taxaSaque = taxaSaque;
	this.taxaDeposito = taxaDeposito;
	this.taxaTransferencia = taxaTransferencia;
}
public static int getContadorDeContasC() {
	return contadorDeContasC;
}
public static void setContadorDeContasC(int contadorDeContasC) {
	ContaCorrente.contadorDeContasC = contadorDeContasC;
}
public int getNumeroConta() {
	return numeroConta;
}
public void setNumeroConta(int numeroConta) {
	this.numeroConta = numeroConta;
}
public double getTaxaSaque() {
	return taxaSaque;
}
public void setTaxaSaque(double taxaSaque) {
	this.taxaSaque = taxaSaque;
}
public double getTaxaDeposito() {
	return taxaDeposito;
}
public void setTaxaDeposito(double taxaDeposito) {
	this.taxaDeposito = taxaDeposito;
}
public double getTaxaTransferencia() {
	return taxaTransferencia;
}
public void setTaxaTransferencia(double taxaTransferencia) {
	this.taxaTransferencia = taxaTransferencia;
}





/*public String toString() { 
	return
	"\nSaldo: " + utils.doubleToString(this.getSaldo());
}*/

/*@Override
public void sacar(double valor) {
	// TODO Auto-generated method stub
	
}

@Override
public void depositar(double valor) throws ValorInvalidoException {
	// TODO Auto-generated method stub
	
}

@Override
public void transferir(double valor, Conta destino) throws SaldoInsuficienteException, ValorInvalidoException {
	// TODO Auto-generated method stub
	
}*/

}

