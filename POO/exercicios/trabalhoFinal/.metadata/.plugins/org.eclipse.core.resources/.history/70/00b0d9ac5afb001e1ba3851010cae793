package javaFinal;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Cliente {
    private String cpf;
    private String senha;
    private List<Conta> contas;
    private String nome;
    private String agencia;
    private double saldo;
    private List<Operacao> operacoes;
    private static Scanner scanner = new Scanner(System.in);

    public Cliente(String cpf, String senha, String nome, String agencia) {
        this.cpf = cpf;
        this.senha = senha;
        this.nome = nome;
        this.agencia = agencia;
        this.saldo = 0.0;
        this.contas = new ArrayList<>();
        this.operacoes = new ArrayList<>();
    }

    public String getCpf() {
        return cpf;
    }

    public String getSenha() {
        return senha;
    }

    public List<Conta> getContas() {
        return contas;
    }

    public String getNome() {
        return nome;
    }

    public String getAgencia() {
        return agencia;
    }

    public double getSaldo() {
        return saldo;
    }

    public List<Operacao> getOperacoes() {
        return operacoes;
    }

    public void sacar(double valor) {
        if (valor <= 0) {
            System.out.println("Valor inválido para saque.");
            return;
        }

        if (saldo < valor) {
            System.out.println("Saldo insuficiente para saque.");
            return;
        }

        saldo -= valor;
        operacoes.add(new Operacao("Saque", valor));
        registrarOperacao("Saque", valor);
        System.out.println("Saque de R$" + valor + " realizado com sucesso.");
    }

    public void depositar(double valor) {
        if (valor <= 0) {
            System.out.println("Valor inválido para depósito.");
            return;
        }

        saldo += valor;
        operacoes.add(new Operacao("Depósito", valor));
        registrarOperacao("Depósito", valor);
        System.out.println("Depósito de R$" + valor + " realizado com sucesso.");
    }

    public void transferir(double valor, String cpfDestinatario) {
        if (valor <= 0) {
            System.out.println("Valor inválido para transferência.");
            return;
        }

        if (saldo < valor) {
            System.out.println("Saldo insuficiente para transferência.");
            return;
        }

        // Implementar lógica de transferência entre contas
        saldo -= valor;
        operacoes.add(new Operacao("Transferência para " + cpfDestinatario, valor));
        registrarOperacao("Transferência para " + cpfDestinatario, valor);
        System.out.println("Transferência de R$" + valor + " para CPF " + cpfDestinatario + " realizada com sucesso.");
    }

    public void gerarRelatorioTributacao() {
        double totalGasto = 0;
        double taxaSaque = 0.10;
        double taxaDeposito = 0.10;
        double taxaTransferencia = 0.20;

        for (Operacao operacao : operacoes) {
            if (operacao.getTipo().equals("Saque")) {
                totalGasto += taxaSaque;
            } else if (operacao.getTipo().equals("Depósito")) {
                totalGasto += taxaDeposito;
            } else if (operacao.getTipo().startsWith("Transferência para")) {
                totalGasto += taxaTransferencia;
            }
        }

        System.out.println("Relatório de tributação da conta corrente:");
        System.out.println("Total gasto em taxas: R$" + totalGasto);
        System.out.println("Taxa de saque: R$" + taxaSaque);
        System.out.println("Taxa de depósito: R$" + taxaDeposito);
        System.out.println("Taxa de transferência: R$" + taxaTransferencia);
    }

    public void gerarRelatorioRendimento() {
        // Implementar relatório de rendimento
    }

    public void contratarSeguroVida() {
        System.out.print("Informe o valor a ser segurado: ");
        double valorSegurado = scanner.nextDouble();
        scanner.nextLine(); // Limpar o buffer do scanner

        double taxaTributo = valorSegurado * 0.20;
        saldo -= taxaTributo;
        System.out.println("Seguro de vida contratado com sucesso. Tributo: R$" + taxaTributo);
    }

    private void registrarOperacao(String tipoOperacao, double valor) {
        try {
            FileWriter fileWriter = new FileWriter("operacoes_" + cpf + ".txt", true);
            PrintWriter printWriter = new PrintWriter(fileWriter);
            printWriter.println(tipoOperacao + ": R$" + valor);
            printWriter.close();
        } catch (IOException e) {
            System.out.println("Erro ao registrar operação: " + e.getMessage());
        }
    }

    public void movimentacoesConta() {
        System.out.println("Selecione uma opção:");
        System.out.println("a. Saque");
        System.out.println("b. Depósito");
        System.out.println("c. Transferência para outra conta");
        System.out.print("Opção: ");
        char opcao = scanner.nextLine().charAt(0);

        switch (opcao) {
            case 'a':
                System.out.print("Informe o valor a ser sacado: ");
                double valorSaque = scanner.nextDouble();
                scanner.nextLine(); // Limpar o buffer do scanner
                sacar(valorSaque);
                break;
            case 'b':
                System.out.print("Informe o valor a ser depositado: ");
                double valorDeposito = scanner.nextDouble();
                scanner.nextLine(); // Limpar o buffer do scanner
                depositar(valorDeposito);
                break;
            case 'c':
                System.out.print("Informe o CPF do destinatário: ");
                String cpfDestinatario = scanner.nextLine();
                System.out.print("Informe o valor a ser transferido: ");
                double valorTransferencia = scanner.nextDouble();
                scanner.nextLine(); // Limpar o buffer do scanner
                transferir(valorTransferencia, cpfDestinatario);
                break;
            default:
                System.out.println("Opção inválida.");
        }
    }

    public void relatoriosConta() {
        System.out.println("Selecione uma opção:");
        System.out.println("a. Saldo");
        System.out.println("b. Relatório de tributação da conta corrente");
        System.out.println("c. Relatório de rendimento da poupança");
        System.out.println("d. Contratar seguro de vida");
        System.out.print("Opção: ");
        char opcao = scanner.nextLine().charAt(0);

        switch (opcao) {
            case 'a':
                System.out.println("Saldo atual: R$" + saldo);

