package br.com.serratec.service;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import br.com.serratec.dto.UsuarioRequestDTO;
import br.com.serratec.dto.UsuarioResponseDTO;
import br.com.serratec.entity.Usuario;
import br.com.serratec.excepition.EmailException;
import br.com.serratec.repository.UsuarioRepository;

@Service //torna classe gerenciada pelo spring
public class UsuarioService {
	
	@Autowired
	private UsuarioRepository repository;
	
	@Autowired
	private BCryptPasswordEncoder encoder;

	public List<UsuarioResponseDTO> listar() {
		
		List<Usuario> usuarios = repository.findAll();
		/*List<UsuarioResponseDTO> listaDTO = new ArrayList<>();
		
		for (Usuario usuario : usuarios) {
			listaDTO.add(new UsuarioResponseDTO(
					usuario.getId(),
					usuario.getNome(),
					usuario.getEmail()));
		}
		return listaDTO;*/
		
			//retorna a lista com progarmacao funcional com maplist com for imbutido automatizado
		return usuarios.stream().map((usuario) -> new UsuarioResponseDTO(usuario.getId(),
				usuario.getNome(), usuario.getEmail())).collect(Collectors.toList());
		
	}
	// caso email do usuario nao seja unico lanca uma excessao
	public UsuarioResponseDTO inserir(UsuarioRequestDTO usuario) throws EmailException {
		if (repository.findByEmail(usuario.getEmail())!=null) {
			throw new  EmailException("Email JÃ¡ Existe na Base");
		}	
		usuario.setSenha(encoder.encode(usuario.getSenha()));
		return repository.save(usuario);
}
	
}